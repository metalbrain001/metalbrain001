// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  isverified Boolean @default(false)
  provider     String?
  provider_id  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session Session[]
  verificationToken VerificationToken[]
  passwordReset PasswordReset[]
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  admin_id  String
  accessToken String
  refreshToken String
  userAgent String?
  ipAddress String?
  isValid Boolean @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model VerificationToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  admin_id  String
  token     String
  purpose   String
  expiresAt DateTime
  used     Boolean @default(false)
  createdAt DateTime @default(now())
}

model PasswordReset {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  admin_id  String
  token     String
  expiresAt DateTime
  used     Boolean @default(false)
  createdAt DateTime @default(now())
}

enum VerificationPurpose {
  EMAIL
  PASSWORD_RESET
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}